{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { EmpModel } from './emp.model';\nlet EmpformviewComponent = class EmpformviewComponent {\n  constructor(fb, emp) {\n    this.fb = fb;\n    this.emp = emp;\n    this.employeeModelObj = new EmpModel();\n    this.tempaddr = [] = [];\n  }\n  ngOnInit() {\n    this.formvalue = this.fb.group({\n      name: ['', [Validators.required]],\n      addr: ['', [Validators.required]],\n      city: ['', [Validators.required]]\n    });\n    this.alldata();\n  }\n  editclick() {\n    this.employeeModelObj.name = this.formvalue.value.name;\n    this.employeeModelObj.addr = this.formvalue.value.addr;\n    this.employeeModelObj.city = this.formvalue.value.city;\n    // console.log(this.employeeModelObj, \"modelclickdata\")\n    this.emp.updateEmp(this.employeeModelObj, this.employeeModelObj.id).subscribe(response => {\n      this.Editresponse = response;\n      this.formvalue.reset();\n      this.ngOnInit();\n    });\n  }\n  onEdit(row) {\n    this.employeeModelObj.id = row.id;\n    this.formvalue.controls['name'].setValue(row.name);\n    this.formvalue.controls['addr'].setValue(row.address.addr);\n    this.formvalue.controls['city'].setValue(row.address.city);\n  }\n  onDelete(row) {\n    this.emp.delEmp(row.id).subscribe(responseList => {\n      alert(\"Emp Deleted\");\n      this.ngOnInit();\n    });\n  }\n  alldata() {\n    this.emp.getalldata().subscribe(response => {\n      for (let i = 0; i < response.response.length; i++) {\n        //console.log(response.response)\n        this.temp = response.response;\n      }\n    });\n  }\n  arraydataFun() {\n    this.emp.getarraydata().subscribe(responseList => {\n      this.arraydata = responseList;\n    });\n  }\n};\nEmpformviewComponent = __decorate([Component({\n  selector: 'app-empformview',\n  templateUrl: './empformview.component.html',\n  styleUrls: ['./empformview.component.scss']\n})], EmpformviewComponent);\nexport { EmpformviewComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","EmpModel","EmpformviewComponent","constructor","fb","emp","ngOnInit","formvalue","group","name","required","addr","city","alldata","editclick","employeeModelObj","value","updateEmp","id","subscribe","response","Editresponse","reset","onEdit","row","controls","setValue","address","onDelete","delEmp","responseList","alert","getalldata","i","length","temp","arraydataFun","getarraydata","arraydata","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\Angular_Demo_Projects\\crud-json-server\\crud-with-json\\src\\app\\empformview\\empformview.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { EmpserviceService } from '../empformpage/empservice.service';\nimport { EmpModel } from './emp.model';\n\n@Component({\n  selector: 'app-empformview',\n  templateUrl: './empformview.component.html',\n  styleUrls: ['./empformview.component.scss']\n})\nexport class EmpformviewComponent implements OnInit {\n\n  alldatares!: object;\n\n  employeeModelObj: EmpModel = new EmpModel();\n\n  public formvalue!: FormGroup\n  constructor(private fb: FormBuilder, private emp: EmpserviceService) {\n\n  }\n\n  ngOnInit(): void {\n    this.formvalue = this.fb.group({\n      name: ['', [Validators.required]],\n      addr: ['', [Validators.required]],\n      city: ['', [Validators.required]]\n    })\n    this.alldata();\n  }\n\n  Editresponse: any\n  editclick() {\n    this.employeeModelObj.name = this.formvalue.value.name;\n    this.employeeModelObj.addr = this.formvalue.value.addr;\n    this.employeeModelObj.city = this.formvalue.value.city;\n    // console.log(this.employeeModelObj, \"modelclickdata\")\n    this.emp.updateEmp(this.employeeModelObj, this.employeeModelObj.id).subscribe((response) => {\n      this.Editresponse = response;\n      this.formvalue.reset()\n      this.ngOnInit();\n    })\n  }\n\n\n\n  onEdit(row: any) {\n    this.employeeModelObj.id = row.id;\n    this.formvalue.controls['name'].setValue(row.name);\n    this.formvalue.controls['addr'].setValue(row.address.addr);\n    this.formvalue.controls['city'].setValue(row.address.city);\n\n  }\n\n  finalresponse: any\n  onDelete(row: any) {\n    this.emp.delEmp(row.id).subscribe(responseList => {\n      alert(\"Emp Deleted\")\n      this.ngOnInit()\n    })\n  }\n\n\n\n  temp: any;\n  tempaddr = [] = [];\n  alldata() {\n    this.emp.getalldata().subscribe((response) => {\n      for (let i = 0; i < response.response.length; i++) {\n        //console.log(response.response)\n        this.temp = response.response\n      }\n    })\n  }\n\n\n  arraydata:any;\n\n  arraydataFun(){\n    this.emp.getarraydata().subscribe(responseList=>{\n      this.arraydata = responseList;\n    })\n  }\n\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}