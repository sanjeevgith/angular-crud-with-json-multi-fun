{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { EmpModel } from './emp.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../empformpage/empservice.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction EmpformviewComponent_tr_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.address.addr);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.address.city);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.bank.acnumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.bank.acname);\n  }\n}\nexport class EmpformviewComponent {\n  constructor(fb, emp) {\n    this.fb = fb;\n    this.emp = emp;\n    this.employeeModelObj = new EmpModel();\n    this.tempaddr = [] = [];\n  }\n  ngOnInit() {\n    this.formvalue = this.fb.group({\n      name: ['', [Validators.required]],\n      addr: ['', [Validators.required]],\n      city: ['', [Validators.required]]\n    });\n    this.alldata();\n    this.arraydataFun();\n  }\n  editclick() {\n    this.employeeModelObj.name = this.formvalue.value.name;\n    this.employeeModelObj.addr = this.formvalue.value.addr;\n    this.employeeModelObj.city = this.formvalue.value.city;\n    // console.log(this.employeeModelObj, \"modelclickdata\")\n    this.emp.updateEmp(this.employeeModelObj, this.employeeModelObj.id).subscribe(response => {\n      this.Editresponse = response;\n      this.formvalue.reset();\n      this.ngOnInit();\n    });\n  }\n  onEdit(row) {\n    this.employeeModelObj.id = row.id;\n    this.formvalue.controls['name'].setValue(row.name);\n    this.formvalue.controls['addr'].setValue(row.address.addr);\n    this.formvalue.controls['city'].setValue(row.address.city);\n  }\n  onDelete(row) {\n    this.emp.delEmp(row.id).subscribe(responseList => {\n      alert(\"Emp Deleted\");\n      this.ngOnInit();\n    });\n  }\n  alldata() {\n    this.emp.getalldata().subscribe(response => {\n      for (let i = 0; i < response.response.length; i++) {\n        //console.log(response.response)\n        this.temp = response.response;\n      }\n    });\n  }\n  arraydataFun() {\n    this.emp.getarraydata().subscribe(responseList => {\n      for (let i = 0; i < responseList.r.length; i++) {\n        this.arraydata = responseList.r;\n      }\n    });\n  }\n}\nEmpformviewComponent.ɵfac = function EmpformviewComponent_Factory(t) {\n  return new (t || EmpformviewComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EmpserviceService));\n};\nEmpformviewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmpformviewComponent,\n  selectors: [[\"app-empformview\"]],\n  decls: 57,\n  vars: 2,\n  consts: [[1, \"navbar\", \"navbar-light\", 2, \"background-color\", \"rgb(201, 235, 174)\", \"border-bottom\", \"1px solid black\"], [1, \"container-fluid\"], [2, \"color\", \"rgb(9, 9, 9)\"], [1, \"d-flex\"], [\"routerLink\", \"/dashboard\"], [2, \"background-color\", \"powderblue\", \"width\", \"100%\", \"height\", \"100%\"], [1, \"container\", 2, \"padding\", \"10px\", \"background-color\", \"antiquewhite\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"name\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"addr\", \"id\", \"exampleInputPassword1\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"city\", \"id\", \"exampleInputPassword1\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"id\", \"cancel\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"card\"], [1, \"card-body\"], [2, \"padding-left\", \"40%\"], [1, \"table\", \"mt-3\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function EmpformviewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Angular CRUD with NODE.JS\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"a\", 4);\n      i0.ɵɵtext(6, \"Dashboard CRUD json\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(7, \"body\", 5)(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"div\", 9)(12, \"div\", 10)(13, \"h5\", 11);\n      i0.ɵɵtext(14, \"Edit Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"button\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 13)(17, \"form\", 14)(18, \"div\", 15)(19, \"label\", 16);\n      i0.ɵɵtext(20, \" Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 15)(23, \"label\", 16);\n      i0.ɵɵtext(24, \"Addr \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 15)(27, \"label\", 16);\n      i0.ɵɵtext(28, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 19);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"div\", 20)(31, \"button\", 21);\n      i0.ɵɵtext(32, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"button\", 22);\n      i0.ɵɵlistener(\"click\", function EmpformviewComponent_Template_button_click_33_listener() {\n        return ctx.editclick();\n      });\n      i0.ɵɵtext(34, \"Update\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(35, \"div\", 23)(36, \"div\", 24)(37, \"div\", 25)(38, \"h3\");\n      i0.ɵɵtext(39, \"Multi Array Data \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(40, \"table\", 26)(41, \"thead\")(42, \"tr\")(43, \"th\", 27);\n      i0.ɵɵtext(44, \"Emp Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"th\", 27);\n      i0.ɵɵtext(46, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"th\", 27);\n      i0.ɵɵtext(48, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"th\", 27);\n      i0.ɵɵtext(50, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"th\", 27);\n      i0.ɵɵtext(52, \"A/C Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(53, \"th\", 27);\n      i0.ɵɵtext(54, \"Bank Name\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(55, \"tbody\");\n      i0.ɵɵtemplate(56, EmpformviewComponent_tr_56_Template, 13, 6, \"tr\", 28);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"formGroup\", ctx.formvalue);\n      i0.ɵɵadvance(39);\n      i0.ɵɵproperty(\"ngForOf\", ctx.arraydata);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","EmpModel","i0","EmpformviewComponent","constructor","fb","emp","ngOnInit","formvalue","group","name","required","addr","city","alldata","arraydataFun","editclick","employeeModelObj","value","updateEmp","id","subscribe","response","Editresponse","reset","onEdit","row","controls","setValue","address","onDelete","delEmp","responseList","alert","getalldata","i","length","temp","getarraydata","r","arraydata","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["F:\\Angular_Demo_Projects\\crud-json-server\\crud-with-json\\src\\app\\empformview\\empformview.component.ts","F:\\Angular_Demo_Projects\\crud-json-server\\crud-with-json\\src\\app\\empformview\\empformview.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { EmpserviceService } from '../empformpage/empservice.service';\nimport { EmpModel } from './emp.model';\n\n@Component({\n  selector: 'app-empformview',\n  templateUrl: './empformview.component.html',\n  styleUrls: ['./empformview.component.scss']\n})\nexport class EmpformviewComponent implements OnInit {\n\n  alldatares!: object;\n\n  employeeModelObj: EmpModel = new EmpModel();\n\n  public formvalue!: FormGroup\n  constructor(private fb: FormBuilder, private emp: EmpserviceService) {\n\n  }\n\n  ngOnInit(): void {\n    this.formvalue = this.fb.group({\n      name: ['', [Validators.required]],\n      addr: ['', [Validators.required]],\n      city: ['', [Validators.required]]\n    })\n    this.alldata();\n    this.arraydataFun();\n  }\n\n  Editresponse: any\n  editclick() {\n    this.employeeModelObj.name = this.formvalue.value.name;\n    this.employeeModelObj.addr = this.formvalue.value.addr;\n    this.employeeModelObj.city = this.formvalue.value.city;\n    // console.log(this.employeeModelObj, \"modelclickdata\")\n    this.emp.updateEmp(this.employeeModelObj, this.employeeModelObj.id).subscribe((response) => {\n      this.Editresponse = response;\n      this.formvalue.reset()\n      this.ngOnInit();\n    })\n  }\n\n\n\n  onEdit(row: any) {\n    this.employeeModelObj.id = row.id;\n    this.formvalue.controls['name'].setValue(row.name);\n    this.formvalue.controls['addr'].setValue(row.address.addr);\n    this.formvalue.controls['city'].setValue(row.address.city);\n\n  }\n\n  finalresponse: any\n  onDelete(row: any) {\n    this.emp.delEmp(row.id).subscribe(responseList => {\n      alert(\"Emp Deleted\")\n      this.ngOnInit()\n    })\n  }\n\n\n\n  temp: any;\n  tempaddr = [] = [];\n  alldata() {\n    this.emp.getalldata().subscribe((response) => {\n      for (let i = 0; i < response.response.length; i++) {\n        //console.log(response.response)\n        this.temp = response.response\n      }\n    })\n  }\n\n\n  arraydata:any;\n\n  arraydataFun(){\n    this.emp.getarraydata().subscribe((responseList)=>{\n      for (let i = 0; i < responseList.r.length; i++) {\n        this.arraydata = responseList.r;\n    \n      }\n    })\n  }\n\n\n\n\n\n}\n","<nav class=\"navbar navbar-light\" style=\"background-color:rgb(201, 235, 174);border-bottom: 1px solid black;\">\n    <div class=\"container-fluid\">\n        <h1 style=\"color: rgb(9, 9, 9);\">Angular CRUD with NODE.JS</h1>\n        <div class=\"d-flex\">\n           \n            <a routerLink=\"/dashboard\">Dashboard CRUD json</a>\n        </div>\n    </div>\n </nav>\n\n\n\n\n\n\n<body style=\"background-color: powderblue; width:100%;height:100%\">\n\n    <div class=\"container\" style=\"padding:10px ; background-color: antiquewhite;\">\n        <!-- <div class=\"card\">\n            <div class=\"card-body\">\n                <table class=\"table mt-3\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Emp Id</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Address</th>\n                            <th scope=\"col\">City</th>\n                            <th scope=\"col\">Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let row of temp\">\n                            <td>{{row.id}}</td>\n                            <td>{{row.name}}</td>\n                            <td>{{row.address.addr}}</td>\n                            <td>{{row.address.city}}</td>\n                            <td>\n                                <button data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" class=\"btn btn-info\"\n                                    (click)=\"onEdit(row)\">Edit</button>\n                                <button (click)=\"onDelete(row)\" class=\"btn btn-danger mx-3\">Delete</button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div class=\"row\">\n                    <div>\n                       <a class=\"btn btn-success\" routerLink=\"/emp\">Register</a>\n                    </div>\n                </div>\n    \n            </div>\n        </div> -->\n    \n    \n    \n    \n    \n    \n        <!-- Modal -->\n        <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Edit Employee</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form [formGroup]=\"formvalue\">\n                            <div class=\"mb-3\">\n                                <label for=\"exampleInputPassword1\" class=\"form-label\"> Name</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"name\" id=\"exampleInputEmail1\"\n                                    aria-describedby=\"emailHelp\">\n                            </div>\n                            <div class=\"mb-3\">\n                                <label for=\"exampleInputPassword1\" class=\"form-label\">Addr </label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"addr\" id=\"exampleInputPassword1\">\n                            </div>\n                            <div class=\"mb-3\">\n                                <label for=\"exampleInputPassword1\" class=\"form-label\">City</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"city\" id=\"exampleInputPassword1\">\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" id=\"cancel\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                        <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\" (click)=\"editclick()\">Update</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n    \n    \n    \n    \n    \n    \n    \n    \n        <div class=\"card\" >\n            \n            <div class=\"card-body\">\n                <div style=\"padding-left: 40%;\">\n                    <h3 >Multi Array Data </h3>\n                </div>\n                <table class=\"table mt-3\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Emp Id</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Address</th>\n                            <th scope=\"col\">City</th>\n                            <th scope=\"col\">A/C Number</th>\n                            <th scope=\"col\">Bank Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let row of arraydata\">\n                            <td>{{row.id}}</td>\n                            <td>{{row.name}}</td>\n                            <td>{{row.address.addr}}</td>\n                            <td>{{row.address.city}}</td>\n                            <td>{{row.bank.acnumber}}</td>\n                            <td>{{row.bank.acname}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    </div>\n\n</body>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}